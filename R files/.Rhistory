library(readr)
getdata_2Fdata_2Fss06hid <- read_csv("~/Downloads/getdata%2Fdata%2Fss06hid.csv")
View(getdata_2Fdata_2Fss06hid)
data <- getdata_2Fdata_2Fss06hid
data$VAL>1
count.fields(data$VALS)
library(XML)
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
balRes<-xmlTreeParse(fileUrl, useInternal=TRUE)
balRes
rootNode<-xmlRoot(balRes)
xmlName(rootNode)
names(rootNode)
sum(xpathSApply(rootNode, "//zipcode", xmlValue)==21231
library(XML)
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
balRes<-xmlTreeParse(fileUrl, useInternal=TRUE)
balRes
rootNode<-xmlRoot(balRes)
xmlName(rootNode)
names(rootNode)
sum(xpathSApply(rootNode, "//zipcode", xmlValue)==21231
bye
library(XML)
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
balRes<-xmlTreeParse(fileUrl, useInternal=TRUE)
balRes
rootNode<-xmlRoot(balRes)
xmlName(rootNode)
names(rootNode)
sum(xpathSApply(rootNode, "//zipcode", xmlValue)==21231
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
library(readr)
x <- read_fwf(
file="http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for",
skip=4,
fwf_widths(c(12, 7, 4, 9, 4, 9, 4, 9, 4)))
x_forth <- x[:4]
View(x)
x4
x$X4
sum(x$X4)
apply(x,4,sum,na.rm = True)
sum(x$X4, na.rm = TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
widths <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
fixed <- read.fwf(url, widths, header = FALSE, skip = 4)
View(fixed)
sum(fixed$V8, na.rm = TRUE)
View(x)
clearPushBack()
install.packages("swirl")
install.packages("dplyr")
library("swir")
library("swirl")
swirl()
library("dplyr")
library("dplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
remove.packages("dplyr", lib="~/R/x86_64-pc-linux-gnu-library/3.2")
install.packages("dplyr")
library("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
library("swirl")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head()
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "IN" | country == "US")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, na, 10))
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
select(cran2, size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, packag, ip_id)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarise(cran, avg_bytes = mean(size))
avg_bytes <- summarise(cran, avg_bytes = mean(size))
summarise(cran, avg_bytes = mean(size))
summarise(cran, avg_bytes = mean(size))
summarise(cran, avg_bytes = mean(size))
info()
skip()
rm(list list = ls())
rm(list = ls())
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "idaho.csv")
idaho <- read.csv("idaho.csv")
View(idaho)
?strsplit
str_id <- strsplit(idaho, "wgtp")
?list
str_id <- strsplit(as.list(idaho), "wgtp")
str_id <- strsplit(as.vector(idaho), "wgtp")
names(idaho)
str_id <- strsplit(names(idaho), "wgtp")
str_id
str_id_un <- unlist(str_id)
str_id_un
str_id_un[123]
str_id[[123]]
rm(list = ls())
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv")
gdpdata <- read.csv("gdpdata.csv")
gdpdata <- read.csv("gdp.csv")
View(gdpdata)
?read.csv
gdpdata <- read.csv("gdp.csv", skip = 4)
gdpdata$X.4
gdpdata$X.4 <- as.numeric(gsub(",","",gdpdata$X.4))
mean(gdpdata$X.4, na.rm = TRUE)
mean(as.numeric(gsub(",","",gdpdata$X.4)), na.rm = TRUE)
mean(as.numeric(gsub(",","",gdpdata[,5])), na.rm = TRUE)
as.numeric(gsub(",","",gdpdata[,5])
)
clean <- as.numeric(gsub(",","",gdpdata[,5])
)
clean_na <- clean[!is.na(clean)]
mean(clean_na)
mean(as.numeric(clean[1:215]),na.rm = TRUE)
mean(as.numeric(clean_na))
rm(list = ls())
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "edu.csv")
library("data.table")
library(data.table)
?fread
read.csv("gdp.csv")
gdpdata <- read.csv("gdp.csv")
View(gdpdata)
gdpdata <- read.table("gdp.csv", select = c(1,2,4,5), col.names = c("CountryCode","Ranking","Economy","Total"), skip = 4)
gdpdata <- fread("gdp.csv", select = c(1,2,4,5), col.names = c("CountryCode","Ranking","Economy","Total"), skip = 4)
edudata <- read.csv("edu.csv")
View(edudata)
?merge
mergeddata <- merge(gdpdata, edudata, by = "CountryCode")
View(mergeddata)
View(mergeddata)
?grep
june <- grep("june",tolower(mergeddata$Special.Notes))
june
fiscal <- grep("fiscal year", tolower(mergeddata$Special.Notes))
as.table(june,fiscal)
fiscal
fiscal <- grep("fiscal year end", tolower(mergeddata$Special.Notes))
fiscal
table(june, fiscal)
grepl("fiscal year end", tolower(mergeddata$Special.Notes))
june <- grepl("june",tolower(mergeddata$Special.Notes))
fiscal <- grepl("fiscal year end", tolower(mergeddata$Special.Notes))
table(june,fiscal)
install.packages("quantmod")
library(quantmod)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
amzn = getSymbols("AMZN",auto.assign=FALSE)
?getSymbols
amzn = getSymbols("AMZN",auto.assign=FALSE,method = "curl")
amzn = getSymbols("AMZN",auto.assign=FALSE)
options("getSymbols.warning4.0"=FALSE)
amzn = getSymbols("AMZN",auto.assign=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
amzn = getSymbols("AMZN",auto.assign=FALSE)
amzn = getSymbols("AMZN")
swirl()
library(swirl)
swirl()
library(dplyr)
bye
bye()
rm(list = ls())
pwd()
getwd()
source()
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
View(activityLabels)
View(features)
View(subTest)
View(subTrain)
View(xTest)
View(xTrain)
View(xTest)
?cbind
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
View(allMerged)
source("run_analysis.R")
View(allMerged)
source("run_analysis.R")
source("run_analysis.R")
View(meanstdData)
?merge
View(allMerged)
View(allMerged)
View(meanstdData)
source("run_analysis.R")
View(reqdData)
View(reqdData)
source("run_analysis.R")
View(activityMerge)
source("run_analysis.R")
View(activityLabels)
View(activityMerge)
?drop
?arrange
??arrange
?drop
source("run_analysis.R")
View(allMerged)
View(activityMerge)
View(activityMerge)
source("run_analysis.R")
View(activityMerge)
is.na(activityMerge)
any(is.na(activityMerge))
all(!is.na(activityMerge))
?summarise_each
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
View(avgData)
?group_by
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
View(avgData)
?write.table
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
View(tidsy)
source("run_analysis.R")
View(tidsy)
View(tidsy)
getwd()
setwd("/home/anirban727/R/x86_64-pc-linux-gnu-library/bin/Ex data plotting 1/R files")
source("plot1.R")
rm(list = ls())
source("plot1.R")
View(data)
subset(data, complete.cases(data))
length(complete.cases())
length(complete.cases(data))
source("plot1.R")
View(subData)
source("plot1.R")
source("plot1.R")
source("plot1.R")
names(subData)
?hist
source("plot1.R")
source("plot1.R")
?dev.copy
source("plot1.R")
source("plot1.R")
source("plot2.R")
source("plot2.R")
datetime
?plot
source("plot2.R")
source("plot2.R")
names(subData)
rename
source("plot3.R")
source("plot3.R")
?line
?points
source("plot3.R")
source("plot3.R")
?legend
source("plot3.R")
?par
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
?legend
source("plot4.R")
source("plot4.R")
